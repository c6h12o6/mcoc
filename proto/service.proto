syntax = "proto3";

option go_package = "github.com/c6h12o6/mcoc/proto";

package proto;

service McocService {

rpc AddChamp(AddChampRequest) returns (AddChampResponse) {}
rpc LockChamp(LockChampRequest) returns (LockChampResponse) {}
rpc ListChamps(ListChampsRequest) returns (ListChampsResponse) {}
rpc GetWarDefense(GetWarDefenseRequest) returns (GetWarDefenseResponse) {}
rpc UpdateChamp(AddChampRequest) returns (AddChampResponse) {}
rpc GetAllChamps(GetAllChampsRequest) returns (GetAllChampsResponse) {}
rpc DelChamp(DelChampRequest) returns (DelChampResponse) {}
rpc GetNodePreferences(GetNodePreferencesRequest) returns (GetNodePreferencesResponse) {}
rpc CreateAlliance(CreateAllianceRequest) returns (CreateAllianceResponse) {}
rpc GetAllianceInfo(GetAllianceInfoRequest) returns (GetAllianceInfoResponse) {}
rpc GetPlayerInfo(GetPlayerInfoRequest) returns (GetPlayerInfoResponse) {}
}

message Champ {
  int32 id = 10;
  string champ_name = 1;
  int32 stars = 2;
  int32 rank = 3;
  int32 sig = 4;
  int32 locked_node = 5;
  int32 assigned_node = 6;
}

message AddChampRequest {
  Champ champ = 1;
  oneof identifier {
    string player = 2;
    int32 id = 3;
  }
}

message AddChampResponse {
  int32 id = 1;
}

message LockChampRequest {
  Champ champ = 1;
  string player = 2;
}

message LockChampResponse {
  int32 id = 1;
}

message ListChampsRequest {
  oneof identifier {
    string player = 1;
    int32 id = 2;
  }
}
message ListChampsResponse {
  repeated Champ champs = 1;
  string player = 2;
}

message PlayerData {
  string name = 1;
  int32 id = 2;
  int32 bg = 3;
}
message ListPlayersRequest {
  int32 alliance = 1;
}
message ListPlayersResponse {
  repeated PlayerData players = 1;
}

message SavePlayersRequest {
  int32 alliance = 1;
  repeated PlayerData players = 2;
}
message SavePlayersResponse {
}


message Assignment {
  string player = 1;
  repeated Champ champs = 2;
}

message GetWarDefenseRequest {
  int32 alliance = 1;
  int32 bg = 2;
}

message GetWarDefenseResponse {
  repeated Assignment assignments = 1;
}

message GetAllChampsRequest {}
message GetAllChampsResponse {
  repeated string names = 1;
}

message DelChampRequest {
  int32 id = 1;
}
message DelChampResponse {}

message GetNodePreferencesRequest {
  int32 alliance_id = 1;
}
message Node {
  int32 node_id = 1;
  repeated string champ_name = 2;
}
message GetNodePreferencesResponse {
  repeated Node nodes = 1;
}

message SetNodePreferencesRequest {
  int32 alliance_id = 1;
  repeated Node nodes = 2;
}
message SetNodePreferencesResponse {}

message CreateAllianceRequest {
  string name = 1;
  int32 player_id = 2;
}
message CreateAllianceResponse {
  int32 alliance_id = 1;
}

message GetAllianceInfoRequest {
  int32 alliance_id = 1;
}
message GetAllianceInfoResponse {
  string name = 1;
  string reference = 2;
}

message GetPlayerInfoRequest {
  string session_id = 1;
}
message GetPlayerInfoResponse {
  string name = 1;
  int32  suicides = 2;
  int32 mystic_dispersion = 3;
}

message SetPlayerInfoRequest {
  string session_id = 1;
  string name = 2;
  int32  suicides = 3;
  int32 mystic_dispersion = 4;
}
message SetPlayerInfoResponse {}
